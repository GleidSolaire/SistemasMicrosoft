// <auto-generated />
using GerenciamentoFuncionarios.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GerenciamentoFuncionarios.Migrations
{
    [DbContext(typeof(GerenciamentoFuncionariosContext))]
    partial class GerenciamentoFuncionariosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GerenciamentoFuncionarios.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("ResponsavelId");

                    b.HasKey("Id");

                    b.HasIndex("ResponsavelId");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("GerenciamentoFuncionarios.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<int?>("LotacaoId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("LotacaoId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("GerenciamentoFuncionarios.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DepartamentosId");

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("ExecutorId");

                    b.Property<DateTime?>("Fim");

                    b.Property<DateTime>("Inicio");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DepartamentosId");

                    b.HasIndex("ExecutorId");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("GerenciamentoFuncionarios.Models.Departamento", b =>
                {
                    b.HasOne("GerenciamentoFuncionarios.Models.Funcionario", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GerenciamentoFuncionarios.Models.Funcionario", b =>
                {
                    b.HasOne("GerenciamentoFuncionarios.Models.Departamento", "Lotacao")
                        .WithMany("Funcionarios")
                        .HasForeignKey("LotacaoId");
                });

            modelBuilder.Entity("GerenciamentoFuncionarios.Models.Tarefa", b =>
                {
                    b.HasOne("GerenciamentoFuncionarios.Models.Departamento", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentosId");

                    b.HasOne("GerenciamentoFuncionarios.Models.Funcionario", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorId");
                });
#pragma warning restore 612, 618
        }
    }
}
